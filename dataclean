{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPkkIkoGMjjMQZ/hzyiIINt"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"gB4LB_Xb_Y3M","executionInfo":{"status":"ok","timestamp":1720739680840,"user_tz":420,"elapsed":3546,"user":{"displayName":"Payal Mewada","userId":"16142587853778633967"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import random"]},{"cell_type":"code","source":["# Define the list of categories for the social media experiment\n","categories = ['Food', 'Travel', 'Fashion', 'Fitness', 'Music', 'Culture', 'Family', 'Health']\n","\n","# Define the number of entries (n)\n","n = 500\n","\n","data = {\n","    'Date': pd.date_range('2021-01-01', periods=n),\n","    'Category': [random.choice(categories) for _ in range(n)],\n","    'Likes': np.random.randint(0, 10000, size=n)\n","}\n"],"metadata":{"id":"Gxy7uRXsE5m1","executionInfo":{"status":"ok","timestamp":1720739765047,"user_tz":420,"elapsed":420,"user":{"displayName":"Payal Mewada","userId":"16142587853778633967"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["df = pd.DataFrame(data)\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"zitQzlPwFKWZ","executionInfo":{"status":"ok","timestamp":1720739811078,"user_tz":420,"elapsed":454,"user":{"displayName":"Payal Mewada","userId":"16142587853778633967"}},"outputId":"a29e2c87-1c3c-4e3e-88d3-a0daf66ddc8b"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        Date Category  Likes\n","0 2021-01-01   Family   4134\n","1 2021-01-02   Family   4366\n","2 2021-01-03   Family   7486\n","3 2021-01-04    Music   2666\n","4 2021-01-05   Family   1657"],"text/html":["\n","  <div id=\"df-e95f51cf-6440-4056-9b57-982d8f9e9a6d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Category</th>\n","      <th>Likes</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2021-01-01</td>\n","      <td>Family</td>\n","      <td>4134</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2021-01-02</td>\n","      <td>Family</td>\n","      <td>4366</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2021-01-03</td>\n","      <td>Family</td>\n","      <td>7486</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2021-01-04</td>\n","      <td>Music</td>\n","      <td>2666</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2021-01-05</td>\n","      <td>Family</td>\n","      <td>1657</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e95f51cf-6440-4056-9b57-982d8f9e9a6d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e95f51cf-6440-4056-9b57-982d8f9e9a6d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e95f51cf-6440-4056-9b57-982d8f9e9a6d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-12aa28a3-38f7-4020-b298-63cb62c8a129\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-12aa28a3-38f7-4020-b298-63cb62c8a129')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-12aa28a3-38f7-4020-b298-63cb62c8a129 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 500,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2021-01-01 00:00:00\",\n        \"max\": \"2022-05-15 00:00:00\",\n        \"num_unique_values\": 500,\n        \"samples\": [\n          \"2021-12-28 00:00:00\",\n          \"2021-03-15 00:00:00\",\n          \"2022-01-10 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"Music\",\n          \"Culture\",\n          \"Family\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Likes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2885,\n        \"min\": 1,\n        \"max\": 9995,\n        \"num_unique_values\": 487,\n        \"samples\": [\n          8936,\n          4602,\n          1518\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["print(\"DataFrame Head:\")\n","print(df.head())\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qUa8wsXTFhgI","executionInfo":{"status":"ok","timestamp":1720739885434,"user_tz":420,"elapsed":473,"user":{"displayName":"Payal Mewada","userId":"16142587853778633967"}},"outputId":"12528ad3-856c-4051-f44f-08d609de81ec"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["DataFrame Head:\n","        Date Category  Likes\n","0 2021-01-01   Family   4134\n","1 2021-01-02   Family   4366\n","2 2021-01-03   Family   7486\n","3 2021-01-04    Music   2666\n","4 2021-01-05   Family   1657\n"]}]},{"cell_type":"code","source":["print(\"\\nDataFrame Information:\")\n","print(df.info())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c_GUCK1FFwWh","executionInfo":{"status":"ok","timestamp":1720739907082,"user_tz":420,"elapsed":552,"user":{"displayName":"Payal Mewada","userId":"16142587853778633967"}},"outputId":"64902be6-b100-4c26-bc37-d2fdafe720f4"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","DataFrame Information:\n","<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 500 entries, 0 to 499\n","Data columns (total 3 columns):\n"," #   Column    Non-Null Count  Dtype         \n","---  ------    --------------  -----         \n"," 0   Date      500 non-null    datetime64[ns]\n"," 1   Category  500 non-null    object        \n"," 2   Likes     500 non-null    int64         \n","dtypes: datetime64[ns](1), int64(1), object(1)\n","memory usage: 11.8+ KB\n","None\n"]}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"DprZuxImF4tZ","executionInfo":{"status":"ok","timestamp":1720740017058,"user_tz":420,"elapsed":492,"user":{"displayName":"Payal Mewada","userId":"16142587853778633967"}},"outputId":"c7587696-66b0-409f-ddfb-2df7677731b0"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                      Date      Likes\n","count                  500   500.0000\n","mean   2021-09-07 12:00:00  5068.5000\n","min    2021-01-01 00:00:00     1.0000\n","25%    2021-05-05 18:00:00  2574.0000\n","50%    2021-09-07 12:00:00  5103.5000\n","75%    2022-01-10 06:00:00  7583.0000\n","max    2022-05-15 00:00:00  9995.0000\n","std                    NaN  2885.9254"],"text/html":["\n","  <div id=\"df-0ca09395-f5b8-4ec4-ba3f-aa21ad57e816\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Likes</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>500</td>\n","      <td>500.0000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>2021-09-07 12:00:00</td>\n","      <td>5068.5000</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>2021-01-01 00:00:00</td>\n","      <td>1.0000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2021-05-05 18:00:00</td>\n","      <td>2574.0000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>2021-09-07 12:00:00</td>\n","      <td>5103.5000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2022-01-10 06:00:00</td>\n","      <td>7583.0000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>2022-05-15 00:00:00</td>\n","      <td>9995.0000</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>NaN</td>\n","      <td>2885.9254</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0ca09395-f5b8-4ec4-ba3f-aa21ad57e816')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0ca09395-f5b8-4ec4-ba3f-aa21ad57e816 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0ca09395-f5b8-4ec4-ba3f-aa21ad57e816');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e1eea2ae-569c-48aa-9830-f3f586047e4e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e1eea2ae-569c-48aa-9830-f3f586047e4e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e1eea2ae-569c-48aa-9830-f3f586047e4e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1970-01-01 00:00:00.000000500\",\n        \"max\": \"2022-05-15 00:00:00\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"500\",\n          \"2021-09-07 12:00:00\",\n          \"2022-05-15 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Likes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3428.62007847563,\n        \"min\": 1.0,\n        \"max\": 9995.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          5068.5,\n          7583.0,\n          500.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["df['Category'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rO0ctGI9GQId","executionInfo":{"status":"ok","timestamp":1720740061926,"user_tz":420,"elapsed":17,"user":{"displayName":"Payal Mewada","userId":"16142587853778633967"}},"outputId":"4ead55fb-4607-4973-a344-7a0102ab503f"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Category\n","Fitness    84\n","Family     72\n","Culture    65\n","Music      63\n","Food       60\n","Fashion    57\n","Travel     51\n","Health     48\n","Name: count, dtype: int64"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VKnSjOBcHL7J","executionInfo":{"status":"ok","timestamp":1720740285756,"user_tz":420,"elapsed":446,"user":{"displayName":"Payal Mewada","userId":"16142587853778633967"}},"outputId":"2b97fe82-fd75-4ce0-ee33-f49ff5ebe1c0"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Date        0\n","Category    0\n","Likes       0\n","dtype: int64"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["df[df.isnull()]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"ob9tU49AHS7J","executionInfo":{"status":"ok","timestamp":1720740313586,"user_tz":420,"elapsed":538,"user":{"displayName":"Payal Mewada","userId":"16142587853778633967"}},"outputId":"e920ff46-dbef-433a-9110-01dbfb69602c"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Date Category  Likes\n","0    NaT      NaN    NaN\n","1    NaT      NaN    NaN\n","2    NaT      NaN    NaN\n","3    NaT      NaN    NaN\n","4    NaT      NaN    NaN\n","..   ...      ...    ...\n","495  NaT      NaN    NaN\n","496  NaT      NaN    NaN\n","497  NaT      NaN    NaN\n","498  NaT      NaN    NaN\n","499  NaT      NaN    NaN\n","\n","[500 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-5488fade-3132-44d4-b487-8fbf14abec57\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Category</th>\n","      <th>Likes</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>495</th>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>496</th>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>497</th>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>498</th>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>499</th>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>500 rows × 3 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5488fade-3132-44d4-b487-8fbf14abec57')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5488fade-3132-44d4-b487-8fbf14abec57 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5488fade-3132-44d4-b487-8fbf14abec57');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-478a9ec7-fea3-4e61-9895-1b5531edf54f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-478a9ec7-fea3-4e61-9895-1b5531edf54f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-478a9ec7-fea3-4e61-9895-1b5531edf54f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","repr_error":"Out of range float values are not JSON compliant: nan"}},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["df.duplicated().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"b2YMpPr9HGji","executionInfo":{"status":"ok","timestamp":1720740262017,"user_tz":420,"elapsed":521,"user":{"displayName":"Payal Mewada","userId":"16142587853778633967"}},"outputId":"f78854f5-75f2-47fa-f2d1-886b4d840a80"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["df[df.duplicated()]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eTRmfrU6Gben","executionInfo":{"status":"ok","timestamp":1720740211071,"user_tz":420,"elapsed":554,"user":{"displayName":"Payal Mewada","userId":"16142587853778633967"}},"outputId":"9de775be-c8af-4740-f9ad-91877f3bfde0"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Date        0\n","Category    0\n","Likes       0\n","dtype: int64"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["# Remove rows with null values\n","df.dropna(inplace=True)\n","\n","# Remove duplicate rows\n","df.drop_duplicates(inplace=True)\n","\n","# Convert 'Date' to datetime format\n","df['Date'] = pd.to_datetime(df['Date'])\n","\n","# Convert 'Likes' to integer format\n","df['Likes'] = df['Likes'].astype(int)\n","df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BLS3jMJwHeZL","executionInfo":{"status":"ok","timestamp":1720740463085,"user_tz":420,"elapsed":454,"user":{"displayName":"Payal Mewada","userId":"16142587853778633967"}},"outputId":"42340b9c-930c-4228-f170-d2a17ed6e8c6"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 500 entries, 0 to 499\n","Data columns (total 3 columns):\n"," #   Column    Non-Null Count  Dtype         \n","---  ------    --------------  -----         \n"," 0   Date      500 non-null    datetime64[ns]\n"," 1   Category  500 non-null    object        \n"," 2   Likes     500 non-null    int64         \n","dtypes: datetime64[ns](1), int64(1), object(1)\n","memory usage: 11.8+ KB\n"]}]},{"cell_type":"code","source":["plt.figure(figsize=(10,5))\n","sns.histplot(df['Likes'],bins=20,kde=True)\n","plt.title('Distribution of Likes')\n","plt.xlabel('Likes')\n","plt.ylabel('Frequency')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":487},"id":"qoxU56_xHgVC","executionInfo":{"status":"ok","timestamp":1720741139283,"user_tz":420,"elapsed":637,"user":{"displayName":"Payal Mewada","userId":"16142587853778633967"}},"outputId":"841e556f-4912-46c3-f647-5d0f56b2a7d1"},"execution_count":28,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.figure(figsize=(10,5))\n","sns.boxplot(x='Category', y='Likes', data=df)\n","plt.title('Likes by Category')\n","plt.xlabel('category')\n","plt.ylabel('Likes')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":487},"id":"Z8aJb1RcJQUt","executionInfo":{"status":"ok","timestamp":1720741149225,"user_tz":420,"elapsed":579,"user":{"displayName":"Payal Mewada","userId":"16142587853778633967"}},"outputId":"8d73c545-73f5-49c6-ea14-d8ccd4765a71"},"execution_count":29,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["mean_likes = df['Likes'].mean()\n","print(f\"\\nMean of 'Likes': {mean_likes:.2f}\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YM95B4nmKpiT","executionInfo":{"status":"ok","timestamp":1720741390441,"user_tz":420,"elapsed":543,"user":{"displayName":"Payal Mewada","userId":"16142587853778633967"}},"outputId":"06161fd5-249f-40c3-a015-0ad7c7f46455"},"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Mean of 'Likes': 5068.50\n"]}]},{"cell_type":"code","source":["mean_likes_by_category = df.groupby('Category')['Likes'].mean()\n","print(\"\\nMean Likes by Category:\")\n","print(mean_likes_by_category)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Urw9WBguLfiU","executionInfo":{"status":"ok","timestamp":1720741410077,"user_tz":420,"elapsed":435,"user":{"displayName":"Payal Mewada","userId":"16142587853778633967"}},"outputId":"57d39d12-7576-4850-91d0-946b8f7b04e4"},"execution_count":35,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Mean Likes by Category:\n","Category\n","Culture    4565.061538\n","Family     4963.513889\n","Fashion    5381.315789\n","Fitness    5074.952381\n","Food       4840.033333\n","Health     5079.750000\n","Music      5434.873016\n","Travel     5303.725490\n","Name: Likes, dtype: float64\n"]}]}]}
